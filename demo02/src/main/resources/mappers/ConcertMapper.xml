<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.demo02.dao.ConcertMapper">
    <resultMap id="concertMap" type="org.demo02.entity.Concert">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="artist" column="artist"/>
        <result property="venue" column="venue"/>
        <result property="venueAddress" column="venue_address"/>
        <result property="concertTime" column="concert_time"/>
        <result property="duration" column="duration"/>
        <result property="description" column="description"/>
        <result property="posterUrl" column="poster_url"/>
        <result property="totalSeats" column="total_seats"/>
        <result property="availableSeats" column="available_seats"/>
        <result property="price" column="price"/>
        <result property="category" column="category"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <insert id="insert" parameterType="org.demo02.entity.Concert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO concert (title, artist, venue, venue_address, concert_time, duration, description, poster_url, 
                           total_seats, available_seats, price, category, status, create_time, update_time)
        VALUES (#{title}, #{artist}, #{venue}, #{venueAddress}, #{concertTime}, #{duration}, #{description}, #{posterUrl},
                #{totalSeats}, #{availableSeats}, #{price}, #{category}, #{status}, #{createTime}, #{updateTime})
    </insert>

    <delete id="deleteById" parameterType="long">
        DELETE FROM concert WHERE id = #{id}
    </delete>

    <update id="update" parameterType="org.demo02.entity.Concert">
        UPDATE concert
        SET title = #{title},
            artist = #{artist},
            venue = #{venue},
            venue_address = #{venueAddress},
            concert_time = #{concertTime},
            duration = #{duration},
            description = #{description},
            poster_url = #{posterUrl},
            total_seats = #{totalSeats},
            available_seats = #{availableSeats},
            price = #{price},
            category = #{category},
            status = #{status},
            update_time = #{updateTime}
        WHERE id = #{id}
    </update>

    <select id="findById" parameterType="long" resultMap="concertMap">
        SELECT * FROM concert WHERE id = #{id}
    </select>

    <select id="findAll" resultMap="concertMap">
        SELECT * FROM concert ORDER BY id ASC
    </select>

    <select id="findByPage" resultMap="concertMap">
        SELECT * FROM concert ORDER BY id ASC LIMIT #{offset}, #{limit}
    </select>

    <select id="findByPageWithCondition" resultMap="concertMap">
        SELECT * FROM concert
        <where>
            <if test="title != null and title != ''">
                AND title LIKE CONCAT('%', #{title}, '%')
            </if>
            <if test="artist != null and artist != ''">
                AND artist LIKE CONCAT('%', #{artist}, '%')
            </if>
            <if test="category != null and category != ''">
                AND category LIKE CONCAT('%', #{category}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="address != null and address != ''">
                AND venue_address LIKE CONCAT(#{address}, '%')
            </if>
            <if test="year != null and year != '' and year != 'before'">
                AND YEAR(concert_time) = #{year}
            </if>
            <if test="year == 'before'">
                AND YEAR(concert_time) &lt; 2015
            </if>
            <if test="month != null and month != ''">
                AND MONTH(concert_time) = #{month}
            </if>
        </where>
        ORDER BY id ASC LIMIT #{offset}, #{limit}
    </select>

    <select id="findByStatus" parameterType="string" resultMap="concertMap">
        SELECT * FROM concert WHERE status = #{status} ORDER BY concert_time DESC
    </select>

    <select id="findByCategory" parameterType="string" resultMap="concertMap">
        SELECT * FROM concert WHERE category LIKE CONCAT('%', #{category}, '%') ORDER BY concert_time DESC
    </select>

    <select id="findByArtist" parameterType="string" resultMap="concertMap">
        SELECT * FROM concert WHERE artist LIKE CONCAT('%', #{artist}, '%') ORDER BY concert_time DESC
    </select>

    <select id="findByVenue" parameterType="string" resultMap="concertMap">
        SELECT * FROM concert WHERE venue LIKE CONCAT('%', #{venue}, '%') ORDER BY concert_time DESC
    </select>

    <select id="findUpcoming" resultMap="concertMap">
        SELECT * FROM concert 
        WHERE concert_time BETWEEN #{startTime} AND #{endTime} 
        AND status = 'UPCOMING'
        ORDER BY concert_time ASC
    </select>

    <select id="findByTimeRange" resultMap="concertMap">
        SELECT * FROM concert 
        WHERE concert_time BETWEEN #{startTime} AND #{endTime}
        ORDER BY concert_time DESC
    </select>

    <select id="findByPriceRange" resultMap="concertMap">
        SELECT * FROM concert
        <where>
            <if test="minPrice != null">
                AND price &gt;= #{minPrice}
            </if>
            <if test="maxPrice != null">
                AND price &lt;= #{maxPrice}
            </if>
        </where>
        ORDER BY price ASC
    </select>

    <update id="updateAvailableSeats">
        UPDATE concert SET available_seats = #{availableSeats} WHERE id = #{id}
    </update>

    <select id="countTotal" resultType="int">
        SELECT COUNT(*) FROM concert
    </select>

    <select id="countByCondition" resultType="int">
        SELECT COUNT(*) FROM concert
        <where>
            <if test="title != null and title != ''">
                AND title LIKE CONCAT('%', #{title}, '%')
            </if>
            <if test="artist != null and artist != ''">
                AND artist LIKE CONCAT('%', #{artist}, '%')
            </if>
            <if test="category != null and category != ''">
                AND category LIKE CONCAT('%', #{category}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="address != null and address != ''">
                AND venue_address LIKE CONCAT(#{address}, '%')
            </if>
            <if test="year != null and year != '' and year != 'before'">
                AND YEAR(concert_time) = #{year}
            </if>
            <if test="year == 'before'">
                AND YEAR(concert_time) &lt; 2015
            </if>
            <if test="month != null and month != ''">
                AND MONTH(concert_time) = #{month}
            </if>
        </where>
    </select>

    <select id="findByCondition" resultMap="concertMap">
        SELECT * FROM concert
        <where>
            <if test="title != null and title != ''">
                AND title LIKE CONCAT('%', #{title}, '%')
            </if>
            <if test="artist != null and artist != ''">
                AND artist LIKE CONCAT('%', #{artist}, '%')
            </if>
            <if test="venue != null and venue != ''">
                AND venue LIKE CONCAT('%', #{venue}, '%')
            </if>
            <if test="category != null and category != ''">
                AND category LIKE CONCAT('%', #{category}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
        </where>
        ORDER BY concert_time DESC
    </select>
</mapper>